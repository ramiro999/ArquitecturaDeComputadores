// This file is part of the materials accompanying the book 
// "The Elements of Computing Systems" by Nisan and Schocken, 
// MIT Press. Book site: www.idc.ac.il/tecs
// File name: projects/03/b/RAM512.hdl

/**
 * Memory of 512 registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM512 {
    IN in[16], load, address[9];
    OUT out[16];

    PARTS:
    // Put your code here:
DMux8Way(in=load,sel=address[0..2],a=register1,b=register2,c=register3,d=register4,e=register5,f=register6,g=register7,h=register8);

   RAM64(in=in,load=register1,address=address[3..8],out=out1);

   RAM64(in=in,load=register2,address=address[3..8],out=out2);

   RAM64(in=in,load=register3,address=address[3..8],out=out3);

   RAM64(in=in,load=register4,address=address[3..8],out=out4);

   RAM64(in=in,load=register5,address=address[3..8],out=out5);

   RAM64(in=in,load=register6,address=address[3..8],out=out6);

   RAM64(in=in,load=register7,address=address[3..8],out=out7);

   RAM64(in=in,load=register8,address=address[3..8],out=out8);

   Mux8Way16(a=out1,b=out2,c=out3,d=out4,e=out5,f=out6,g=out7,h=out8,sel=address[0..2],out=out);
}